import java.util.Scanner;

public class TravelingSalesmanDP {
    static int[][] distances;
    static int numberOfCities;
    static int[][] dp;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of cities: ");
        numberOfCities = scanner.nextInt();

        distances = new int[numberOfCities][numberOfCities];
        System.out.println("Enter the distance matrix (0 for same city):");
        for (int i = 0; i < numberOfCities; i++) {
            for (int j = 0; j < numberOfCities; j++) {
                distances[i][j] = scanner.nextInt();
            }
        }

        dp = new int[1 << numberOfCities][numberOfCities];
        for (int[] row : dp) {
            for (int j = 0; j < numberOfCities; j++) {
                row[j] = -1; 
            }
        }

        int minCost = tsp(1, 0);
        System.out.println("Minimum cost: " + minCost);
        scanner.close();
    }

    public static int tsp(int mask, int pos) {
        if (mask == (1 << numberOfCities) - 1) {
            return distances[pos][0];
        }
        if (dp[mask][pos] != -1) {
            return dp[mask][pos];
        }

        int minCost = Integer.MAX_VALUE;

     
        for (int city = 0; city < numberOfCities; city++) {
            if ((mask & (1 << city)) == 0) {
                int newCost = distances[pos][city] + tsp(mask | (1 << city), city);
                minCost = Math.min(minCost, newCost);
            }
        }

        dp[mask][pos] = minCost;
        return minCost;
    }

}
